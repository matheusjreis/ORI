# -*- coding: utf-8 -*-
"""pre_processamento.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/141XlnGDqOsbz5jl0F0a4_6qo9pEHeZeV
"""

import nltk

import re

from nltk.tokenize import word_tokenize

from nltk.probability import FreqDist

import matplotlib.pyplot as plt

"""ID do corpus"""

nltk_id = 'machado'

nltk.download(nltk_id)

print(nltk.corpus.machado.readme())

helena = nltk.corpus.machado.raw('romance/marm03.txt')

print(helena)

"""Vamos fazer o seguinte:
* Selecionar apenas letras (remover pontuação, números e outros caracteres)
* Converter o texto para letra minúscula
"""

helena_clean_text =  re.findall(r'\b[A-zÀ-úü]+\b', helena.lower())

print(helena_clean_text)

"""Agora vamos remover as stopwords, ou seja, as palavras que não possuem valor semântico para a busca (exemplo: artigos e preposições. O NLTK fornece bibliotecas de stopwords para vários idiomas."""

nltk.download('stopwords')

stopwords = nltk.corpus.stopwords.words('portuguese')

print(stopwords)

portuguese_stopwords = set(stopwords)

stemming_helena_text = [w for w in helena_clean_text if w not in portuguese_stopwords]

print(stemming_helena_text)

"""[texto do link](https://)Também podemos trabalhar com radicais (stemming). Existem duas formas aqui:

*   Stemming - "corta" as palavras usando a raiz como base
*   Lemmatization - reduz as palavras a forma verdadeira da raiz

Exemplo: andando

*   Stemming - anda
*   Lemmatization - andar

Lemmatization é uma função mais complexa, portanto, se o texto for muito grande pode demorar um pouco para executá-la.

O nltk possui duas funções para stemming: Porter (PorterStemmer) e Lancaster (LancasterStemmer). Ele também possui um lemmatizador (WordNetLemmatizer).

"""

porter = nltk.PorterStemmer()

no_stemming_helena_text = [porter.stem(t) for t in stemming_helena_text]

print(no_stemming_helena_text)

"""Vamos ver a frequência de ocorrência dos termos e tentar enxergar diferenças entre o texto processado com e sem stemming."""

freq_sem_stem = FreqDist(no_stemming_helena_text)
freq_com_stem = FreqDist(stemming_helena_text)

print("20 palavras mais frequentes sem stem:")
print(freq_sem_stem.most_common(20))

print("20 palavras mais frequentes com stem:")
print(freq_com_stem.most_common(20))

plt.figure(figsize = (13, 8))
freq_sem_stem.plot(25, title = "Frequência de Palavras - Sem Stemming")

plt.figure(figsize = (13, 8))
freq_com_stem.plot(25, title = "Frequência de Palavras - Com Stemming")